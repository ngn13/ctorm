name: Tests

on:
  push:
    paths-ignore:
      - ".github/workflows/docker.yml"
      - "docs/*"
      - ".clang-format"
      - "Dockerfile"
      - "Doxyfile"
      - "README.md"
      - "LICENSE.txt"
    branches:
      - "main"

  pull_request:
    paths-ignore:
      - ".github/workflows/docker.yml"
      - "docs/*"
      - ".clang-format"
      - "Dockerfile"
      - "Doxyfile"
      - "README.md"
      - "LICENSE.txt"
    types: [opened, reopened, synchronize, ready_for_review]

permissions:
  pull-requests: read

jobs:
  format:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v3

      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y make clang-format-19 black

      - name: "Check formatting"
        run: make check

  lint:
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v3

      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y make clang-tidy

      - name: "Check linting"
        run: make lint

  test:
    if: github.event.pull_request.draft == false
    runs-on: ubuntu-latest
    steps:
      - name: "Checkout the source code"
        uses: actions/checkout@v3

      - name: "Install dependencies"
        run: |
          sudo apt-get update
          sudo apt-get install -y jq gcc make libcjson-dev

      - name: "Build the library"
        run: make

      - name: "Build the examples"
        run: make example

      - name: "Run example #1 (hello)"
        run: ./scripts/test.sh 1

      - name: "Run example #2 (echo)"
        run: ./scripts/test.sh 2

      - name: "Run example #3 (params)"
        run: ./scripts/test.sh 3

      - name: "Run example #4 (locals)"
        run: ./scripts/test.sh 4

      - name: "Run example #5 (middleware)"
        run: ./scripts/test.sh 5

      - name: "Run example #6 (multithread)"
        run: ./scripts/test.sh 6
